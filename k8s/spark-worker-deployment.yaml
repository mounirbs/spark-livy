apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 --file docker-compose.yml convert
      -o k8s
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: spark-worker
  name: spark-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: spark-worker
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 --file docker-compose.yml
          convert -o k8s
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: spark-worker
    spec:
      containers:
      - command:
        - bash
        - -c
        - /opt/spark/sbin/start-worker.sh spark://spark-master:7077 && tail -f /dev/null
        env:
        - name: PYSPARK_PYTHON
          value: python3
        - name: SPARK_WORKER_CORES
          value: "1"
        - name: SPARK_WORKER_MEMORY
          value: 2g
        image: mounirbs/spark-python3-java11:3.5.4
        imagePullPolicy: ""
        name: spark-worker
        resources: {}
        volumeMounts:
        - mountPath: /opt/spark/work-dir/spark-warehouse/data
          name: spark-worker-claim0
        - mountPath: /python
          name: spark-worker-claim1
      hostname: spark-worker
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: spark-worker-claim0
        persistentVolumeClaim:
          claimName: spark-worker-claim0
      - name: spark-worker-claim1
        persistentVolumeClaim:
          claimName: spark-worker-claim1
status: {}
